/*!
 * Font Awesome Free 5.10.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 */
!(function () {
  function r(t) { return (r = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; })(t); } function i(t, e) { for (let n = 0; n < e.length; n++) { const a = e[n]; a.enumerable = a.enumerable || !1, a.configurable = !0, 'value' in a && (a.writable = !0), Object.defineProperty(t, a.key, a); } } function G(r) {
    for (let t = 1; t < arguments.length; t++) {
      var i = arguments[t] != null ? arguments[t] : {}; let e = Object.keys(i); typeof Object.getOwnPropertySymbols === 'function' && (e = e.concat(Object.getOwnPropertySymbols(i).filter((t) => Object.getOwnPropertyDescriptor(i, t).enumerable))), e.forEach((t) => {
        let e; let n; let a; e = r, a = i[n = t], n in e ? Object.defineProperty(e, n, {
          value: a, enumerable: !0, configurable: !0, writable: !0,
        }) : e[n] = a;
      });
    } return r;
  } function d(t, e) { return (function (t) { if (Array.isArray(t)) return t; }(t)) || (function (t, e) { const n = []; let a = !0; let r = !1; let i = void 0; try { for (var o, c = t[Symbol.iterator](); !(a = (o = c.next()).done) && (n.push(o.value), !e || n.length !== e); a = !0); } catch (t) { r = !0, i = t; } finally { try { a || c.return == null || c.return(); } finally { if (r) throw i; } } return n; }(t, e)) || (function () { throw new TypeError('Invalid attempt to destructure non-iterable instance'); }()); } function m(t) { return (function (t) { if (Array.isArray(t)) { for (var e = 0, n = new Array(t.length); e < t.length; e++)n[e] = t[e]; return n; } }(t)) || (function (t) { if (Symbol.iterator in Object(t) || Object.prototype.toString.call(t) === '[object Arguments]') return Array.from(t); }(t)) || (function () { throw new TypeError('Invalid attempt to spread non-iterable instance'); }()); } const t = function () {}; let e = {}; let n = {}; let a = null; let o = { mark: t, measure: t }; try { typeof window !== 'undefined' && (e = window), typeof document !== 'undefined' && (n = document), typeof MutationObserver !== 'undefined' && (a = MutationObserver), typeof performance !== 'undefined' && (o = performance); } catch (t) {} const c = (e.navigator || {}).userAgent; const s = void 0 === c ? '' : c; const g = e; const v = n; const l = a; const f = o; const u = !!g.document; const p = !!v.documentElement && !!v.head && typeof v.addEventListener === 'function' && typeof v.createElement === 'function'; const k = ~s.indexOf('MSIE') || ~s.indexOf('Trident/'); const h = '___FONT_AWESOME___'; const A = 16; const b = 'fa'; const y = 'svg-inline--fa'; const K = 'data-fa-i2svg'; const w = 'data-fa-pseudo-element'; const x = 'data-fa-pseudo-element-pending'; const C = 'data-prefix'; const O = 'data-icon'; const S = 'fontawesome-i2svg'; const P = 'async'; const N = ['HTML', 'HEAD', 'STYLE', 'SCRIPT']; const M = (function () { try { return !0; } catch (t) { return !1; } }()); const z = {
    fas: 'solid', far: 'regular', fal: 'light', fad: 'duotone', fab: 'brands', fa: 'solid',
  }; const E = {
    solid: 'fas', regular: 'far', light: 'fal', duotone: 'fad', brands: 'fab',
  }; const j = 'fa-layers-text'; const L = /Font Awesome 5 (Solid|Regular|Light|Duotone|Brands|Free|Pro)/; const R = {
    900: 'fas', 400: 'far', normal: 'far', 300: 'fal',
  }; const _ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; const T = _.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]); const I = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask']; const Y = {
    GROUP: 'group', SWAP_OPACITY: 'swap-opacity', PRIMARY: 'primary', SECONDARY: 'secondary',
  }; const H = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter', Y.GROUP, Y.SWAP_OPACITY, Y.PRIMARY, Y.SECONDARY].concat(_.map((t) => ''.concat(t, 'x'))).concat(T.map((t) => 'w-'.concat(t))); const D = g.FontAwesomeConfig || {}; if (v && typeof v.querySelector === 'function') { [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']].forEach((t) => { let e; const n = d(t, 2); const a = n[0]; const r = n[1]; const i = (e = (function (t) { const e = v.querySelector(`script[${t}]`); if (e) return e.getAttribute(t); }(a))) === '' || e !== 'false' && (e === 'true' || e); i != null && (D[r] = i); }); } const F = G({}, {
    familyPrefix: b, replacementClass: y, autoReplaceSvg: !0, autoAddCss: !0, autoA11y: !0, searchPseudoElements: !1, observeMutations: !0, mutateApproach: 'async', keepOriginalSource: !0, measurePerformance: !1, showMissingIcons: !0,
  }, D); F.autoReplaceSvg || (F.observeMutations = !1); const J = G({}, F); g.FontAwesomeConfig = J; const U = g || {}; U[h] || (U[h] = {}), U[h].styles || (U[h].styles = {}), U[h].hooks || (U[h].hooks = {}), U[h].shims || (U[h].shims = []); const W = U[h]; const q = []; let X = !1; function B(t) { p && (X ? setTimeout(t, 0) : q.push(t)); }p && ((X = (v.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(v.readyState)) || v.addEventListener('DOMContentLoaded', function t() { v.removeEventListener('DOMContentLoaded', t), X = 1, q.map((t) => t()); })); let V; const Q = 'pending'; const Z = 'settled'; const $ = 'fulfilled'; const tt = 'rejected'; const et = function () {}; const nt = typeof global !== 'undefined' && void 0 !== global.process && typeof global.process.emit === 'function'; const at = typeof setImmediate === 'undefined' ? setTimeout : setImmediate; let rt = []; function it() { for (let t = 0; t < rt.length; t++)rt[t][0](rt[t][1]); V = !(rt = []); } function ot(t, e) { rt.push([t, e]), V || (V = !0, at(it, 0)); } function ct(t) { const e = t.owner; let n = e._state; let a = e._data; const r = t[n]; const i = t.then; if (typeof r === 'function') { n = $; try { a = r(a); } catch (t) { ut(i, t); } }st(i, a) || (n === $ && lt(i, a), n === tt && ut(i, a)); } function st(e, n) { let a; try { if (e === n) throw new TypeError('A promises callback cannot return that same promise.'); if (n && (typeof n === 'function' || r(n) === 'object')) { const t = n.then; if (typeof t === 'function') return t.call(n, (t) => { a || (a = !0, n === t ? ft(e, t) : lt(e, t)); }, (t) => { a || (a = !0, ut(e, t)); }), !0; } } catch (t) { return a || ut(e, t), !0; } return !1; } function lt(t, e) { t !== e && st(t, e) || ft(t, e); } function ft(t, e) { t._state === Q && (t._state = Z, t._data = e, ot(mt, t)); } function ut(t, e) { t._state === Q && (t._state = Z, t._data = e, ot(pt, t)); } function dt(t) { t._then = t._then.forEach(ct); } function mt(t) { t._state = $, dt(t); } function pt(t) { t._state = tt, dt(t), !t._handled && nt && global.process.emit('unhandledRejection', t._data, t); } function ht(t) { global.process.emit('rejectionHandled', t); } function gt(t) { if (typeof t !== 'function') throw new TypeError(`Promise resolver ${t} is not a function`); if (this instanceof gt == !1) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function."); this._then = [], (function (t, e) { function n(t) { ut(e, t); } try { t((t) => { lt(e, t); }, n); } catch (t) { n(t); } }(t, this)); }gt.prototype = {
    constructor: gt,
    _state: Q,
    _then: null,
    _data: void 0,
    _handled: !1,
    then(t, e) {
      const n = {
        owner: this, then: new this.constructor(et), fulfilled: t, rejected: e,
      }; return !e && !t || this._handled || (this._handled = !0, this._state === tt && nt && ot(ht, this)), this._state === $ || this._state === tt ? ot(ct, n) : this._then.push(n), n.then;
    },
    catch(t) { return this.then(null, t); },
  }, gt.all = function (c) { if (!Array.isArray(c)) throw new TypeError('You must pass an array to Promise.all().'); return new gt((n, t) => { const a = []; let r = 0; function e(e) { return r++, function (t) { a[e] = t, --r || n(a); }; } for (var i, o = 0; o < c.length; o++)(i = c[o]) && typeof i.then === 'function' ? i.then(e(o), t) : a[o] = i; r || n(a); }); }, gt.race = function (r) { if (!Array.isArray(r)) throw new TypeError('You must pass an array to Promise.race().'); return new gt((t, e) => { for (var n, a = 0; a < r.length; a++)(n = r[a]) && typeof n.then === 'function' ? n.then(t, e) : t(n); }); }, gt.resolve = function (e) { return e && r(e) === 'object' && e.constructor === gt ? e : new gt((t) => { t(e); }); }, gt.reject = function (n) { return new gt((t, e) => { e(n); }); }; const vt = typeof Promise === 'function' ? Promise : gt; const bt = A; const yt = {
    size: 16, x: 0, y: 0, rotate: 0, flipX: !1, flipY: !1,
  }; function wt(t) { if (t && p) { const e = v.createElement('style'); e.setAttribute('type', 'text/css'), e.innerHTML = t; for (var n = v.head.childNodes, a = null, r = n.length - 1; r > -1; r--) { const i = n[r]; const o = (i.tagName || '').toUpperCase(); ['STYLE', 'LINK'].indexOf(o) > -1 && (a = i); } return v.head.insertBefore(e, a), t; } } const xt = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'; function kt() { for (var t = 12, e = ''; t-- > 0;)e += xt[62 * Math.random() | 0]; return e; } function At(t) { for (var e = [], n = (t || []).length >>> 0; n--;)e[n] = t[n]; return e; } function Ct(t) { return t.classList ? At(t.classList) : (t.getAttribute('class') || '').split(' ').filter((t) => t); } function Ot(t, e) { let n; const a = e.split('-'); const r = a[0]; const i = a.slice(1).join('-'); return r !== t || i === '' || (n = i, ~H.indexOf(n)) ? null : i; } function St(t) {
    return ''.concat(t).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;');
  } function Pt(n) { return Object.keys(n || {}).reduce((t, e) => t + ''.concat(e, ': ').concat(n[e], ';'), ''); } function Nt(t) { return t.size !== yt.size || t.x !== yt.x || t.y !== yt.y || t.rotate !== yt.rotate || t.flipX || t.flipY; } function Mt(t) { const e = t.transform; const n = t.containerWidth; const a = t.iconWidth; const r = { transform: 'translate('.concat(n / 2, ' 256)') }; const i = 'translate('.concat(32 * e.x, ', ').concat(32 * e.y, ') '); const o = 'scale('.concat(e.size / 16 * (e.flipX ? -1 : 1), ', ').concat(e.size / 16 * (e.flipY ? -1 : 1), ') '); const c = 'rotate('.concat(e.rotate, ' 0 0)'); return { outer: r, inner: { transform: ''.concat(i, ' ').concat(o, ' ').concat(c) }, path: { transform: 'translate('.concat(a / 2 * -1, ' -256)') } }; } const zt = {
    x: 0, y: 0, width: '100%', height: '100%',
  }; function Et(t) { const e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]; return t.attributes && (t.attributes.fill || e) && (t.attributes.fill = 'black'), t; } function jt(t) {
    const e = t.icons; const n = e.main; const a = e.mask; const r = t.prefix; const i = t.iconName; const o = t.transform; const c = t.symbol; const s = t.title; const l = t.extra; const f = t.watchable; const u = void 0 !== f && f; const d = a.found ? a : n; const m = d.width; const p = d.height; const h = 'fa-w-'.concat(Math.ceil(m / p * 16)); const g = [J.replacementClass, i ? ''.concat(J.familyPrefix, '-').concat(i) : '', h].filter((t) => l.classes.indexOf(t) === -1).concat(l.classes).join(' '); const v = {
      children: [],
      attributes: G({}, l.attributes, {
        'data-prefix': r, 'data-icon': i, class: g, role: l.attributes.role || 'img', xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 '.concat(m, ' ').concat(p),
      }),
    }; u && (v.attributes[K] = ''), s && v.children.push({ tag: 'title', attributes: { id: v.attributes['aria-labelledby'] || 'title-'.concat(kt()) }, children: [s] }); let b; let y; let w; let x; let k; let A; let C; let O; let S; let P; let N; let M; let z; let E; let j; let L; let R; let _; let T; let I; let Y; let H; let D; let F; let U; let W; const q = G({}, v, {
      prefix: r, iconName: i, main: n, mask: a, transform: o, symbol: c, styles: l.styles,
    }); const X = a.found && n.found ? (w = (b = q).children, x = b.attributes, k = b.main, A = b.mask, C = b.transform, O = k.width, S = k.icon, P = A.width, N = A.icon, M = Mt({ transform: C, containerWidth: P, iconWidth: O }), z = { tag: 'rect', attributes: G({}, zt, { fill: 'white' }) }, E = S.children ? { children: S.children.map(Et) } : {}, j = { tag: 'g', attributes: G({}, M.inner), children: [Et(G({ tag: S.tag, attributes: G({}, S.attributes, M.path) }, E))] }, L = { tag: 'g', attributes: G({}, M.outer), children: [j] }, R = 'mask-'.concat(kt()), _ = 'clip-'.concat(kt()), T = { tag: 'mask', attributes: G({}, zt, { id: R, maskUnits: 'userSpaceOnUse', maskContentUnits: 'userSpaceOnUse' }), children: [z, L] }, I = { tag: 'defs', children: [{ tag: 'clipPath', attributes: { id: _ }, children: (y = N, y.tag === 'g' ? y.children : [y]) }, T] }, w.push(I, { tag: 'rect', attributes: G({ fill: 'currentColor', 'clip-path': 'url(#'.concat(_, ')'), mask: 'url(#'.concat(R, ')') }, zt) }), { children: w, attributes: x }) : (function (t) { const e = t.children; const n = t.attributes; const a = t.main; const r = t.transform; const i = Pt(t.styles); if (i.length > 0 && (n.style = i), Nt(r)) { const o = Mt({ transform: r, containerWidth: a.width, iconWidth: a.width }); e.push({ tag: 'g', attributes: G({}, o.outer), children: [{ tag: 'g', attributes: G({}, o.inner), children: [{ tag: a.icon.tag, children: a.icon.children, attributes: G({}, a.icon.attributes, o.path) }] }] }); } else e.push(a.icon); return { children: e, attributes: n }; }(q)); const B = X.children; const V = X.attributes; return q.children = B, q.attributes = V, c ? (H = (Y = q).prefix, D = Y.iconName, F = Y.children, U = Y.attributes, W = Y.symbol, [{ tag: 'svg', attributes: { style: 'display: none;' }, children: [{ tag: 'symbol', attributes: G({}, U, { id: !0 === W ? ''.concat(H, '-').concat(J.familyPrefix, '-').concat(D) : W }), children: F }] }]) : (function (t) { const e = t.children; const n = t.main; const a = t.mask; const r = t.attributes; const i = t.styles; const o = t.transform; if (Nt(o) && n.found && !a.found) { const c = n.width / n.height / 2; const s = 0.5; r.style = Pt(G({}, i, { 'transform-origin': ''.concat(c + o.x / 16, 'em ').concat(s + o.y / 16, 'em') })); } return [{ tag: 'svg', attributes: r, children: e }]; }(q));
  } function Lt(t) {
    const e = t.content; const n = t.width; const a = t.height; const r = t.transform; const i = t.title; const o = t.extra; const c = t.watchable; const s = void 0 !== c && c; const l = G({}, o.attributes, i ? { title: i } : {}, { class: o.classes.join(' ') }); s && (l[K] = ''); let f; let u; let d; let m; let p; let h; let g; let v; let b; const y = G({}, o.styles); Nt(r) && (y.transform = (u = (f = {
      transform: r, startCentered: !0, width: n, height: a,
    }).transform, d = f.width, m = void 0 === d ? A : d, p = f.height, h = void 0 === p ? A : p, g = f.startCentered, b = '', b += (v = void 0 !== g && g) && k ? 'translate('.concat(u.x / bt - m / 2, 'em, ').concat(u.y / bt - h / 2, 'em) ') : v ? 'translate(calc(-50% + '.concat(u.x / bt, 'em), calc(-50% + ').concat(u.y / bt, 'em)) ') : 'translate('.concat(u.x / bt, 'em, ').concat(u.y / bt, 'em) '), b += 'scale('.concat(u.size / bt * (u.flipX ? -1 : 1), ', ').concat(u.size / bt * (u.flipY ? -1 : 1), ') '), b += 'rotate('.concat(u.rotate, 'deg) ')), y['-webkit-transform'] = y.transform); const w = Pt(y); w.length > 0 && (l.style = w); const x = []; return x.push({ tag: 'span', attributes: l, children: [e] }), i && x.push({ tag: 'span', attributes: { class: 'sr-only' }, children: [i] }), x;
  } const Rt = function () {}; const _t = J.measurePerformance && f && f.mark && f.measure ? f : { mark: Rt, measure: Rt }; const Tt = 'FA "5.10.2"'; const It = function (t) { _t.mark(''.concat(Tt, ' ').concat(t, ' ends')), _t.measure(''.concat(Tt, ' ').concat(t), ''.concat(Tt, ' ').concat(t, ' begins'), ''.concat(Tt, ' ').concat(t, ' ends')); }; const Yt = { begin(t) { return _t.mark(''.concat(Tt, ' ').concat(t, ' begins')), function () { return It(t); }; }, end: It }; const Ht = function (t, e, n, a) { let r; let i; let o; let c; let s; const l = Object.keys(t); const f = l.length; const u = void 0 !== a ? (c = e, s = a, function (t, e, n, a) { return c.call(s, t, e, n, a); }) : e; for (o = void 0 === n ? (r = 1, t[l[0]]) : (r = 0, n); r < f; r++)o = u(o, t[i = l[r]], i, t); return o; }; function Dt(t) { for (var e = '', n = 0; n < t.length; n++) { e += (`000${t.charCodeAt(n).toString(16)}`).slice(-4); } return e; } const Ft = W.styles; const Ut = W.shims; let Wt = {}; let qt = {}; let Xt = {}; const Bt = function () { const t = function (a) { return Ht(Ft, (t, e, n) => (t[n] = Ht(e, a, {}), t), {}); }; Wt = t((t, e, n) => (e[3] && (t[e[3]] = n), t)), qt = t((e, t, n) => { const a = t[2]; return e[n] = n, a.forEach((t) => { e[t] = n; }), e; }); const i = 'far' in Ft; Xt = Ht(Ut, (t, e) => { const n = e[0]; let a = e[1]; const r = e[2]; return a !== 'far' || i || (a = 'fas'), t[n] = { prefix: a, iconName: r }, t; }, {}); }; function Vt(t, e) { return (Wt[t] || {})[e]; }Bt(); const Gt = W.styles; const Kt = function () { return { prefix: null, iconName: null, rest: [] }; }; function Jt(t) { return t.reduce((t, e) => { const n = Ot(J.familyPrefix, e); if (Gt[e])t.prefix = e; else if (J.autoFetchSvg && ['fas', 'far', 'fal', 'fad', 'fab', 'fa'].indexOf(e) > -1)t.prefix = e; else if (n) { const a = t.prefix === 'fa' ? Xt[n] || { prefix: null, iconName: null } : {}; t.iconName = a.iconName || n, t.prefix = a.prefix || t.prefix; } else e !== J.replacementClass && e.indexOf('fa-w-') !== 0 && t.rest.push(e); return t; }, Kt()); } function Qt(t, e, n) { if (t && t[e] && t[e][n]) return { prefix: e, iconName: n, icon: t[e][n] }; } function Zt(t) { let n; const e = t.tag; const a = t.attributes; const r = void 0 === a ? {} : a; const i = t.children; const o = void 0 === i ? [] : i; return typeof t === 'string' ? St(t) : '<'.concat(e, ' ').concat((n = r, Object.keys(n || {}).reduce((t, e) => t + ''.concat(e, '="').concat(St(n[e]), '" '), '').trim()), '>').concat(o.map(Zt).join(''), '</').concat(e, '>'); } const $t = function () {}; function te(t) { return typeof (t.getAttribute ? t.getAttribute(K) : null) === 'string'; } var ee = { replace(t) { const e = t[0]; const n = t[1].map((t) => Zt(t)).join('\n'); if (e.parentNode && e.outerHTML)e.outerHTML = n + (J.keepOriginalSource && e.tagName.toLowerCase() !== 'svg' ? '\x3c!-- '.concat(e.outerHTML, ' --\x3e') : ''); else if (e.parentNode) { const a = document.createElement('span'); e.parentNode.replaceChild(a, e), a.outerHTML = n; } }, nest(t) { const e = t[0]; const n = t[1]; if (~Ct(e).indexOf(J.replacementClass)) return ee.replace(t); const a = new RegExp(''.concat(J.familyPrefix, '-.*')); delete n[0].attributes.style; const r = n[0].attributes.class.split(' ').reduce((t, e) => (e === J.replacementClass || e.match(a) ? t.toSvg.push(e) : t.toNode.push(e), t), { toNode: [], toSvg: [] }); n[0].attributes.class = r.toSvg.join(' '); const i = n.map((t) => Zt(t)).join('\n'); e.setAttribute('class', r.toNode.join(' ')), e.setAttribute(K, ''), e.innerHTML = i; } }; function ne(t) { t(); } function ae(n, t) { const a = typeof t === 'function' ? t : $t; if (n.length === 0)a(); else { let e = ne; J.mutateApproach === P && (e = g.requestAnimationFrame || ne), e(() => { const t = !0 === J.autoReplaceSvg ? ee.replace : ee[J.autoReplaceSvg] || ee.replace; const e = Yt.begin('mutate'); n.map(t), e(), a(); }); } } let re = !1; function ie() { re = !1; } let oe = null; function ce(t) {
    if (l && J.observeMutations) {
      const r = t.treeCallback; const i = t.nodeCallback; const o = t.pseudoElementsCallback; const e = t.observeMutationsRoot; const n = void 0 === e ? v : e; oe = new l((t) => { re || At(t).forEach((t) => { if (t.type === 'childList' && t.addedNodes.length > 0 && !te(t.addedNodes[0]) && (J.searchPseudoElements && o(t.target), r(t.target)), t.type === 'attributes' && t.target.parentNode && J.searchPseudoElements && o(t.target.parentNode), t.type === 'attributes' && te(t.target) && ~I.indexOf(t.attributeName)) if (t.attributeName === 'class') { const e = Jt(Ct(t.target)); const n = e.prefix; const a = e.iconName; n && t.target.setAttribute('data-prefix', n), a && t.target.setAttribute('data-icon', a); } else i(t.target); }); }), p && oe.observe(n, {
        childList: !0, attributes: !0, characterData: !0, subtree: !0,
      });
    }
  } function se(t) { let e; let n; const a = t.getAttribute('data-prefix'); const r = t.getAttribute('data-icon'); const i = void 0 !== t.innerText ? t.innerText.trim() : ''; const o = Jt(Ct(t)); return a && r && (o.prefix = a, o.iconName = r), o.prefix && i.length > 1 ? o.iconName = (e = o.prefix, n = t.innerText, (qt[e] || {})[n]) : o.prefix && i.length === 1 && (o.iconName = Vt(o.prefix, Dt(t.innerText))), o; } const le = function (t) {
    const e = {
      size: 16, x: 0, y: 0, flipX: !1, flipY: !1, rotate: 0,
    }; return t ? t.toLowerCase().split(' ').reduce((t, e) => { const n = e.toLowerCase().split('-'); const a = n[0]; let r = n.slice(1).join('-'); if (a && r === 'h') return t.flipX = !0, t; if (a && r === 'v') return t.flipY = !0, t; if (r = parseFloat(r), isNaN(r)) return t; switch (a) { case 'grow': t.size += r; break; case 'shrink': t.size -= r; break; case 'left': t.x -= r; break; case 'right': t.x += r; break; case 'up': t.y -= r; break; case 'down': t.y += r; break; case 'rotate': t.rotate += r; } return t; }, e) : e;
  }; function fe(t) {
    let e; let n; let a; let r; let i; let o; let c; const s = se(t); const l = s.iconName; const f = s.prefix; const u = s.rest; const d = (e = t.getAttribute('style'), n = [], e && (n = e.split(';').reduce((t, e) => { const n = e.split(':'); const a = n[0]; const r = n.slice(1); return a && r.length > 0 && (t[a] = r.join(':').trim()), t; }, {})), n); const m = le(t.getAttribute('data-fa-transform')); const p = (a = t.getAttribute('data-fa-symbol')) !== null && (a === '' || a); const h = (i = At((r = t).attributes).reduce((t, e) => (t.name !== 'class' && t.name !== 'style' && (t[e.name] = e.value), t), {}), o = r.getAttribute('title'), J.autoA11y && (o ? i['aria-labelledby'] = ''.concat(J.replacementClass, '-title-').concat(kt()) : (i['aria-hidden'] = 'true', i.focusable = 'false')), i); const g = (c = t.getAttribute('data-fa-mask')) ? Jt(c.split(' ').map((t) => t.trim())) : Kt(); return {
      iconName: l, title: t.getAttribute('title'), prefix: f, transform: m, symbol: p, mask: g, extra: { classes: u, styles: d, attributes: h },
    };
  } function ue(t) { this.name = 'MissingIcon', this.message = t || 'Icon unavailable', this.stack = (new Error()).stack; }(ue.prototype = Object.create(Error.prototype)).constructor = ue; const de = { fill: 'currentColor' }; const me = { attributeType: 'XML', repeatCount: 'indefinite', dur: '2s' }; const pe = { tag: 'path', attributes: G({}, de, { d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z' }) }; const he = G({}, me, { attributeName: 'opacity' }); const ge = { tag: 'g', children: [pe, { tag: 'circle', attributes: G({}, de, { cx: '256', cy: '364', r: '28' }), children: [{ tag: 'animate', attributes: G({}, me, { attributeName: 'r', values: '28;14;28;28;14;28;' }) }, { tag: 'animate', attributes: G({}, he, { values: '1;0;1;1;0;1;' }) }] }, { tag: 'path', attributes: G({}, de, { opacity: '1', d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z' }), children: [{ tag: 'animate', attributes: G({}, he, { values: '1;0;0;0;0;1;' }) }] }, { tag: 'path', attributes: G({}, de, { opacity: '0', d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z' }), children: [{ tag: 'animate', attributes: G({}, he, { values: '0;0;1;1;0;0;' }) }] }] }; const ve = W.styles; function be(t) {
    const e = t[0]; const n = t[1]; const a = d(t.slice(4), 1)[0]; return {
      found: !0, width: e, height: n, icon: Array.isArray(a) ? { tag: 'g', attributes: { class: ''.concat(J.familyPrefix, '-').concat(Y.GROUP) }, children: [{ tag: 'path', attributes: { class: ''.concat(J.familyPrefix, '-').concat(Y.SECONDARY), fill: 'currentColor', d: a[0] } }, { tag: 'path', attributes: { class: ''.concat(J.familyPrefix, '-').concat(Y.PRIMARY), fill: 'currentColor', d: a[1] } }] } : { tag: 'path', attributes: { fill: 'currentColor', d: a } },
    };
  } function ye(a, r) {
    return new vt((t, e) => {
      const n = {
        found: !1, width: 512, height: 512, icon: ge,
      }; if (a && r && ve[r] && ve[r][a]) return t(be(ve[r][a])); a && r && !J.showMissingIcons ? e(new ue('Icon is missing for prefix '.concat(r, ' with icon name ').concat(a))) : t(n);
    });
  } const we = W.styles; function xe(t) {
    let i; let e; let o; let c; let s; let l; let f; let n; let u; const a = fe(t); return ~a.extra.classes.indexOf(j) ? (function (t, e) {
      const n = e.title; const a = e.transform; const r = e.extra; let i = null; let o = null; if (k) { const c = parseInt(getComputedStyle(t).fontSize, 10); const s = t.getBoundingClientRect(); i = s.width / c, o = s.height / c; } return J.autoA11y && !n && (r.attributes['aria-hidden'] = 'true'), vt.resolve([t, Lt({
        content: t.innerHTML, width: i, height: o, transform: a, title: n, extra: r, watchable: !0,
      })]);
    }(t, a)) : (i = t, o = (e = a).iconName, c = e.title, s = e.prefix, l = e.transform, f = e.symbol, n = e.mask, u = e.extra, new vt((r, t) => {
      vt.all([ye(o, s), ye(n.iconName, n.prefix)]).then((t) => {
        const e = d(t, 2); const n = e[0]; const a = e[1]; r([i, jt({
          icons: { main: n, mask: a }, prefix: s, iconName: o, transform: l, symbol: f, mask: a, title: c, extra: u, watchable: !0,
        })]);
      });
    }));
  } function ke(t) { const n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; if (p) { const e = v.documentElement.classList; const a = function (t) { return e.add(''.concat(S, '-').concat(t)); }; const r = function (t) { return e.remove(''.concat(S, '-').concat(t)); }; const i = J.autoFetchSvg ? Object.keys(z) : Object.keys(we); const o = ['.'.concat(j, ':not([').concat(K, '])')].concat(i.map((t) => '.'.concat(t, ':not([').concat(K, '])'))).join(', '); if (o.length !== 0) { let c = []; try { c = At(t.querySelectorAll(o)); } catch (t) {} if (c.length > 0) { a('pending'), r('complete'); const s = Yt.begin('onTree'); const l = c.reduce((t, e) => { try { const n = xe(e); n && t.push(n); } catch (t) { M || t instanceof ue && console.error(t); } return t; }, []); return new vt((e, t) => { vt.all(l).then((t) => { ae(t, () => { a('active'), a('complete'), r('pending'), typeof n === 'function' && n(), s(), e(); }); }).catch(() => { s(), t(); }); }); } } } } function Ae(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; xe(t).then((t) => { t && ae([t], e); }); } function Ce(m, p) {
    const h = ''.concat(x).concat(p.replace(':', '-')); return new vt((a, t) => {
      if (m.getAttribute(h) !== null) return a(); const e = At(m.children).filter((t) => t.getAttribute(w) === p)[0]; const n = g.getComputedStyle(m, p); const r = n.getPropertyValue('font-family').match(L); const i = n.getPropertyValue('font-weight'); if (e && !r) return m.removeChild(e), a(); if (r) {
        const o = n.getPropertyValue('content'); const c = ~['Solid', 'Regular', 'Light', 'Duotone', 'Brands'].indexOf(r[1]) ? E[r[1].toLowerCase()] : R[i]; const s = Dt(o.length === 3 ? o.substr(1, 1) : o); const l = Vt(c, s); const f = l; if (!l || e && e.getAttribute(C) === c && e.getAttribute(O) === f)a(); else {
          m.setAttribute(h, f), e && m.removeChild(e); const u = {
            iconName: null, title: null, prefix: null, transform: yt, symbol: !1, mask: null, extra: { classes: [], styles: {}, attributes: {} },
          }; const d = u.extra; d.attributes[w] = p, ye(l, c).then((t) => {
            const e = jt(G({}, u, {
              icons: { main: t, mask: Kt() }, prefix: c, iconName: f, extra: d, watchable: !0,
            })); const n = v.createElement('svg'); p === ':before' ? m.insertBefore(n, m.firstChild) : m.appendChild(n), n.outerHTML = e.map((t) => Zt(t)).join('\n'), m.removeAttribute(h), a();
          }).catch(t);
        }
      } else a();
    });
  } function Oe(t) { return vt.all([Ce(t, ':before'), Ce(t, ':after')]); } function Se(t) { return !(t.parentNode === document.head || ~N.indexOf(t.tagName.toUpperCase()) || t.getAttribute(w) || t.parentNode && t.parentNode.tagName === 'svg'); } function Pe(r) { if (p) return new vt((t, e) => { const n = At(r.querySelectorAll('*')).filter(Se).map(Oe); const a = Yt.begin('searchPseudoElements'); re = !0, vt.all(n).then(() => { a(), ie(), t(); }).catch(() => { a(), ie(), e(); }); }); } const Ne = 'svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.3333333333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:.4;opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:1;opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}.fad.fa-inverse{color:#fff}'; function Me() { const t = b; const e = y; const n = J.familyPrefix; const a = J.replacementClass; let r = Ne; if (n !== t || a !== e) { const i = new RegExp('\\.'.concat(t, '\\-'), 'g'); const o = new RegExp('\\--'.concat(t, '\\-'), 'g'); const c = new RegExp('\\.'.concat(e), 'g'); r = r.replace(i, '.'.concat(n, '-')).replace(o, '--'.concat(n, '-')).replace(c, '.'.concat(a)); } return r; } function ze() { J.autoAddCss && !_e && (wt(Me()), _e = !0); } function Ee(e, t) { return Object.defineProperty(e, 'abstract', { get: t }), Object.defineProperty(e, 'html', { get() { return e.abstract.map((t) => Zt(t)); } }), Object.defineProperty(e, 'node', { get() { if (p) { const t = v.createElement('div'); return t.innerHTML = e.html, t.children; } } }), e; } function je(t) { const e = t.prefix; const n = void 0 === e ? 'fa' : e; const a = t.iconName; if (a) return Qt(Re.definitions, n, a) || Qt(W.styles, n, a); } let Le; var Re = new (function () { function t() { !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, t)), this.definitions = {}; } let e; let n; let a; return e = t, (n = [{ key: 'add', value() { for (var e = this, t = arguments.length, n = new Array(t), a = 0; a < t; a++)n[a] = arguments[a]; const r = n.reduce(this._pullDefinitions, {}); Object.keys(r).forEach((t) => { e.definitions[t] = G({}, e.definitions[t] || {}, r[t]), (function t(e, a) { const n = (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}).skipHooks; const r = void 0 !== n && n; const i = Object.keys(a).reduce((t, e) => { const n = a[e]; return n.icon ? t[n.iconName] = n.icon : t[e] = n, t; }, {}); typeof W.hooks.addPack !== 'function' || r ? W.styles[e] = G({}, W.styles[e] || {}, i) : W.hooks.addPack(e, i), e === 'fas' && t('fa', a); }(t, r[t])), Bt(); }); } }, { key: 'reset', value() { this.definitions = {}; } }, { key: '_pullDefinitions', value(i, t) { const o = t.prefix && t.iconName && t.icon ? { 0: t } : t; return Object.keys(o).map((t) => { const e = o[t]; const n = e.prefix; const a = e.iconName; const r = e.icon; i[n] || (i[n] = {}), i[n][a] = r; }), i; } }]) && i(e.prototype, n), a && i(e, a), t; }())(); var _e = !1; const Te = {
    i2svg() { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; if (p) { ze(); const e = t.node; const n = void 0 === e ? v : e; const a = t.callback; const r = void 0 === a ? function () {} : a; return J.searchPseudoElements && Pe(n), ke(n, r); } return vt.reject('Operation requires a DOM of some kind.'); },
    css: Me,
    insertCss() { _e || (wt(Me()), _e = !0); },
    watch() {
      const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const e = t.autoReplaceSvgRoot; const n = t.observeMutationsRoot; !1 === J.autoReplaceSvg && (J.autoReplaceSvg = !0), J.observeMutations = !0, B(() => {
        He({ autoReplaceSvgRoot: e }), ce({
          treeCallback: ke, nodeCallback: Ae, pseudoElementsCallback: Pe, observeMutationsRoot: n,
        });
      });
    },
  }; const Ie = (Le = function (t) {
    const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const n = e.transform; const a = void 0 === n ? yt : n; const r = e.symbol; const i = void 0 !== r && r; const o = e.mask; const c = void 0 === o ? null : o; const s = e.title; const l = void 0 === s ? null : s; const f = e.classes; const u = void 0 === f ? [] : f; const d = e.attributes; const m = void 0 === d ? {} : d; const p = e.styles; const h = void 0 === p ? {} : p; if (t) {
      const g = t.prefix; const v = t.iconName; const b = t.icon; return Ee(G({ type: 'icon' }, t), () => (ze(), J.autoA11y && (l ? m['aria-labelledby'] = ''.concat(J.replacementClass, '-title-').concat(kt()) : (m['aria-hidden'] = 'true', m.focusable = 'false')), jt({
        icons: {
          main: be(b),
          mask: c ? be(c.icon) : {
            found: !1, width: null, height: null, icon: {},
          },
        },
        prefix: g,
        iconName: v,
        transform: G({}, yt, a),
        symbol: i,
        title: l,
        extra: { attributes: m, styles: h, classes: u },
      })));
    }
  }, function (t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const n = (t || {}).icon ? t : je(t || {}); let a = e.mask; return a && (a = (a || {}).icon ? a : je(a || {})), Le(n, G({}, e, { mask: a })); }); const Ye = {
    noAuto() { J.autoReplaceSvg = !1, J.observeMutations = !1, oe && oe.disconnect(); },
    config: J,
    dom: Te,
    library: Re,
    parse: { transform(t) { return le(t); } },
    findIconDefinition: je,
    icon: Ie,
    text(t) {
      const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const n = e.transform; const a = void 0 === n ? yt : n; const r = e.title; const i = void 0 === r ? null : r; const o = e.classes; const c = void 0 === o ? [] : o; const s = e.attributes; const l = void 0 === s ? {} : s; const f = e.styles; const u = void 0 === f ? {} : f; return Ee({ type: 'text', content: t }, () => (ze(), Lt({
        content: t, transform: G({}, yt, a), title: i, extra: { attributes: l, styles: u, classes: [''.concat(J.familyPrefix, '-layers-text')].concat(m(c)) },
      })));
    },
    counter(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const n = e.title; const a = void 0 === n ? null : n; const r = e.classes; const i = void 0 === r ? [] : r; const o = e.attributes; const c = void 0 === o ? {} : o; const s = e.styles; const l = void 0 === s ? {} : s; return Ee({ type: 'counter', content: t }, () => (ze(), (function (t) { const e = t.content; const n = t.title; const a = t.extra; const r = G({}, a.attributes, n ? { title: n } : {}, { class: a.classes.join(' ') }); const i = Pt(a.styles); i.length > 0 && (r.style = i); const o = []; return o.push({ tag: 'span', attributes: r, children: [e] }), n && o.push({ tag: 'span', attributes: { class: 'sr-only' }, children: [n] }), o; }({ content: t.toString(), title: a, extra: { attributes: c, styles: l, classes: [''.concat(J.familyPrefix, '-layers-counter')].concat(m(i)) } })))); },
    layer(t) { const e = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).classes; const n = void 0 === e ? [] : e; return Ee({ type: 'layer' }, () => { ze(); let e = []; return t((t) => { Array.isArray(t) ? t.map((t) => { e = e.concat(t.abstract); }) : e = e.concat(t.abstract); }), [{ tag: 'span', attributes: { class: [''.concat(J.familyPrefix, '-layers')].concat(m(n)).join(' ') }, children: e }]; }); },
    toHtml: Zt,
  }; var He = function () { const t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).autoReplaceSvgRoot; const e = void 0 === t ? v : t; (Object.keys(W.styles).length > 0 || J.autoFetchSvg) && p && J.autoReplaceSvg && Ye.dom.i2svg({ node: e }); }; !(function (t) { try { t(); } catch (t) { if (!M) throw t; } }(() => { u && (g.FontAwesome || (g.FontAwesome = Ye), B(() => { He(), ce({ treeCallback: ke, nodeCallback: Ae, pseudoElementsCallback: Pe }); })), W.hooks = G({}, W.hooks, { addPack(t, e) { W.styles[t] = G({}, W.styles[t] || {}, e), Bt(), He(); }, addShims(t) { let e; (e = W.shims).push.apply(e, m(t)), Bt(), He(); } }); }));
}());